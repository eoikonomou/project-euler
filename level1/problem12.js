// Highly divisible triangular number

/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

function countDivisors(number) {
  var divisors = 1;
  var factor = 2;
  while (Math.pow(factor, 2) <= number) {
    var exponent = 0;
    while (number % factor === 0) {
      exponent++;
      number /= factor;
    }
    divisors *= exponent + 1;
    factor = require('./problem7').nextPrime(factor);
  }
  if (number > 1) {
    divisors *= 2;
  }
  return divisors;
}

function getNextTriangleNumber(previous, number) {
  return previous + number;
}

function findTriangleNumberWithDivisors(n) {
  const now = Date.now();
  let divisors = 0;
  let triangleNumber = 0;
  let i = 1;
  while (divisors <= n) {
    triangleNumber = getNextTriangleNumber(triangleNumber, i);
    divisors = countDivisors(triangleNumber);
    i++;
  }
  console.log(require('../utils/time')(now));
  return triangleNumber;
}

// console.log(findTriangleNumberWithDivisors(5)); // 28
// console.log(findTriangleNumberWithDivisors(29)); // 2016
console.log(findTriangleNumberWithDivisors(500)); // 76576500
